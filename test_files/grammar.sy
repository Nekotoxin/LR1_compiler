start_point
    : Program $
    ;
Program
    : TYPE IDENTIFIER ( ) Statement_block
    ;
TYPE
    : INT
    | FLOAT
    | VOID
    ;
Statement_block
    : { Statement_string }
    ;
Statement_string
    : NULL
    | Statement_string Statement
    ;
Statement
    : Declarative_clause
    | Assignment_clause
    | If_clause
    | While_clause
    | Return_clause
    | Statement_block
    ;
Declarative_clause
    : TYPE IDENTIFIER ;
    | TYPE IDENTIFIER = Expression ;
    ;
Assignment_clause
    : IDENTIFIER = Expression ;
    ;
Return_clause
    : RETURN Expression ;
    | RETURN ;
    ;
While_clause
    : WHILE ( Expression ) Statement_block
    ;
If_clause
    : IF ( Expression ) Statement_block
    | IF ( Expression ) Statement_block ELSE Statement_block
    | IF ( Expression ) Statement_block ELSE If_clause
    ;
Expression
    : Add_Expression
    ;
Add_Expression
    : Item
    | Item + Add_Expression
    | Item - Add_Expression
    ;
Item
    : Factor
    | Factor * Factor
    | Factor / Factor
    ;
Factor
    : I_CONSTANT
    | ( Expression )
    | IDENTIFIER FTYPE
    ;
FTYPE
    : NULL
    | call
    ;
call
    | ( Parameter )
    ;
Parameter
    : NULL
    | Parameter_list
    ;
Parameter_list
    | Expression
    | Parameter_list , Expression
    ;
