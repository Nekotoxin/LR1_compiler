start_point
    : programs $
    ;
programs
    : programs decl_stmt
    | programs func_decl
    | NULL
    ;
func_parameter_list
    : NULL
    | func_parameter_list , type IDENTIFIER
    | type IDENTIFIER
    ;
func_decl
    : type IDENTIFIER ( func_parameter_list ) { stmts }
    ;
type
    : INT
    | FLOAT
    | VOID
    ;
stmts
    : NULL
    | stmts stmt
    ;
stmt
    : decl_stmt
    | assign_stmt
    | if_stmt
    | while_stmt
    | return_stmt
    | expr_stmt
    ;
expr_stmt
    : binop_expr ;
    ;
decl_stmt
    : type IDENTIFIER ;
    | type IDENTIFIER = binop_expr ;
    ;
assign_stmt
    : IDENTIFIER = binop_expr ;
    ;
return_stmt
    : RETURN binop_expr ;
    | RETURN ;
    ;
while_stmt
    : WHILE ( binop_expr ) { stmts }
    ;
if_stmt
    : IF ( binop_expr ) { stmts }
    | IF ( binop_expr ) { stmts } ELSE { stmts }
    ;
binop_expr
	: add_expr
	| binop_expr < add_expr
	| binop_expr > add_expr
	| binop_expr LE_OP add_expr
	| binop_expr GE_OP add_expr
	;
add_expr
    : item
    | add_expr + item
    | add_expr - item
    ;
item
    : factor
    | factor * factor
    | factor / factor
    ;
factor
    : unary_expr
    | - unary_expr
    ;
unary_expr
    : I_CONSTANT
    | F_CONSTANT
    | ( binop_expr )
    | IDENTIFIER
    | IDENTIFIER ( parameter_list )
    ;
parameter_list
    : binop_expr
    | parameter_list , binop_expr
    ;
